{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../app/root.tsx", "../app/routes/onboarding.tsx", "../app/routes/_index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { LiveReload, Outlet, Links, Scripts } from \"@remix-run/react\";\nimport { useState, useEffect } from \"react\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport { useNavigate } from 'react-router-dom';\nimport stylesheet from \"~/tailwind.css\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nexport default function App() {\n\n  return (\n    <html lang=\"en\" className=\"scroll-smooth\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width,initial-scale=1\" />\n\n        <Links />\n      </head>\n      <body className=\"bg-gradient-to-tr from-fitalyst-green to-fitalyst-orange no-scrollbar h-[200vh]\">\n        <LiveReload />\n        <Outlet />\n        <Scripts />\n      </body>\n    </html>);\n\n}", "import type { LinksFunction } from \"@remix-run/node\";\nimport { useNavigate } from 'react-router-dom';\nimport stylesheet from \"~/tailwind.css\";\nimport { useState, useEffect } from \"react\";\n\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nclass Student {\n  _id: string;\n  name: string;\n  email: string;\n  calendarLink: string;\n  originalCalendarLink: string;\n  bedtime: string;\n  emojis: Array<{emoji: number;timestamp: Date;}>;\n\n  constructor(_id: string, name: string, email: string, calendarLink: string, originalCalendarLink: string, bedtime: string, emojis: Array<{emoji: number;timestamp: Date;}> = []) {\n    this._id = _id;\n    this.name = name;\n    this.email = email;\n    this.calendarLink = calendarLink;\n    this.originalCalendarLink = originalCalendarLink;\n    this.bedtime = bedtime;\n    this.emojis = emojis;\n  }\n}\n\n\n\nexport default function Onboarding() {\n  const navigate = useNavigate();\n  const [student, setStudent] = useState(new Student(\"\", \"\"));\n  const [page, setPage] = useState(0);\n  const [question, setQuestion] = useState(\"What is your name?\");\n  const [input, setInput] = useState(\"\");\n  const [type, setType] = useState(\"text\");\n  const [calendarLink, setCalendarLink] = useState(\"\");\n  const [bedtime, setBedtime] = useState(\"23:00\"); // e.g., 11 PM\n  const [emojis, setEmojis] = useState([]);\n\n\n\n\n\n  async function createStudent(bedtimeValue: string) {\n    try {\n      const response = await fetch(`http://ec2-3-144-236-30.us-east-2.compute.amazonaws.com:3002/students`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: student.name,\n          email: student.email,\n          calendarLink: calendarLink,\n          bedtime: bedtimeValue,\n          emojis: emojis\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to create student: ${response.statusText}`);\n      }\n\n      const createdStudent = await response.json();\n\n      // Store the student's ID in localStorage\n      localStorage.setItem('studentId', createdStudent._id);\n\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error creating student:\", error);\n      alert(\"Failed to onboard. Please try again.\");\n    }\n  }\n\n\n\n  function onClick(input: any) {\n    switch (page) {\n      case 0:\n        if (input === \"\") {\n          alert(\"Please enter your name.\");\n          return;\n        }\n        setStudent((prev) => ({ ...prev, name: input }));\n        setQuestion(\"What is your email?\");\n        break;\n      case 1:\n        if (input === \"\") {\n          alert(\"Please enter your email.\");\n          return;\n        }\n        setStudent((prev) => ({ ...prev, email: input }));\n        setQuestion(\"Please provide your Google Calendar link.\");\n        break;\n      case 2:\n        setCalendarLink(input);\n        setQuestion(\"When is your bedtime?\");\n        setType(\"time\");\n        break;\n      case 3:\n        if (input === \"\") {\n          alert(\"Please enter your bedtime.\");\n          return;\n        } else {\n          setBedtime(input);\n          createStudent(input); // Directly call the createStudent function here.\n        }\n        break;\n    }\n\n    setPage(page + 1);\n  }\n\n\n  return (\n    <div className=\"h-screen\">\n            <div className=\"flex flex-col space-y-10 justify-center h-full\">\n                <p className=\"text-white font-bold text-5xl place-self-center\"> {question} </p>\n                <input\n          className=\"h-20 text-black font-bold text-5xl place-self-center\"\n          type={type}\n          value={input}\n          onChange={(event) => setInput(event.target.value)}\n          onKeyUp={(event) => {\n            if (event.key === 'Enter') {\n              onClick(input);\n              setInput(\"\");\n            }\n          }}>\n        </input>\n                <div className=\"place-self-center\">\n                    {page !== 0 && <button\n            className=\"text-white background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n            onClick={() => {\n              switch (page) {\n                case 1:\n                  setQuestion(\"What is your name?\");\n                  setInput(\"\");\n                  break;\n                case 2:\n                  setQuestion(\"What is your email?\");\n                  setInput(student.name);\n                  setType(\"text\");\n                  break;\n                case 3:\n                  setInput(student.email);\n                  break;\n                default:\n                  break;\n              }\n              setPage(page - 1);\n            }}>\n             Back </button>}\n                    <button\n            className=\"text-white background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n            onClick={() => {onClick(input);setInput(\"\");}}>\n             Next </button>\n                </div>\n            </div>\n        </div>);\n\n}", "import { useState, useEffect, useRef } from \"react\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport { useNavigate } from 'react-router-dom';\nimport stylesheet from \"~/tailwind.css\";\nimport * as ICAL from 'ical.js';\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nconst BASE_API_URL = \"http://ec2-3-144-236-30.us-east-2.compute.amazonaws.com:3002\";\n\nclass Student {\n  _id: string;\n  name: string;\n  email: string;\n  calendarLink: string;\n  originalCalendarLink: string;\n  bedtime: string;\n  emojis: Array<{emoji: number;timestamp: Date;}>;\n\n  constructor(_id: string, name: string, email: string, calendarLink: string, originalCalendarLink: string, bedtime: string, emojis: Array<{emoji: number;timestamp: Date;}> = []) {\n    this._id = _id;\n    this.name = name;\n    this.email = email;\n    this.calendarLink = calendarLink;\n    this.originalCalendarLink = originalCalendarLink;\n    this.bedtime = bedtime;\n    this.emojis = emojis;\n  }\n}\n\nclass Assignment {\n  _id: string;\n  name: string;\n  description: string;\n  date: Date;\n\n  constructor(_id: string, name: string, description: string, date: Date) {\n    this._id = _id;\n    this.name = name;\n    this.description = description;\n    this.date = date;\n  }\n}\n\nexport default function Dash() {\n  const bottomRef = useRef<null | HTMLDivElement>(null);\n  const navigate = useNavigate();\n  const [showSettings, setShowSettings] = useState(false);\n  const [showEmotes, setShowEmotes] = useState(true);\n  const [response, setResponse] = useState(\"\");\n  const [signedIn, setSignedIn] = useState(false);\n  const [assignments, setAssignments] = useState<Array<Assignment>>([]);\n  const [currentStudent, setCurrentStudent] = useState<Student | null>(null);\n  const [bedtime, setBedtime] = useState(currentStudent?.bedtime || \"\");\n  const [name, setName] = useState(currentStudent?.name || \"\");\n  const [calendarLink, setCalendarLink] = useState(currentStudent?.calendarLink || \"\");\n  const [originalCalendarLink, setOriginalCalendarLink] = useState(currentStudent?.originalCalendarLink || \"\");\n  const [email, setEmail] = useState(currentStudent?.email || \"\");\n  const storedStudentId = typeof window !== 'undefined' ? localStorage.getItem('studentId') : null;\n\n  function isSignedIn() {\n    return true; // This should ideally be a check if a user is logged in or not.\n  }\n\n  const [students, setStudents] = useState<Array<Student>>([]);\n\n  const fetchStudentData = async () => {\n    try {\n      const response = await fetch(`${BASE_API_URL}/students`);\n      if (response.ok) {\n        const studentsData = await response.json();\n        const studentsList = studentsData.map((student: any) =>\n        new Student(student._id, student.name, student.email, student.calendarLink, student.originalCalendarLink, student.bedtime, student.emojis)\n        );\n\n        setStudents(studentsList);\n\n        // Retrieve the studentId from local storage\n        const storedStudentId = localStorage.getItem('studentId');\n\n        // Find the student with the stored ID\n        const currentStudentFromStorage = studentsList.find((student) => student._id === '651e54cab928f5556958a14d');\n\n        if (currentStudentFromStorage && currentStudentFromStorage.calendarLink) {\n          setCurrentStudent(currentStudentFromStorage);\n          setBedtime(currentStudentFromStorage.bedtime); // Set bedtime state\n          setOriginalCalendarLink(currentStudentFromStorage.originalCalendarLink); // Set originalCalendarLink state\n          fetchAndParseICS(currentStudentFromStorage);\n        }\n      } else {\n        console.error(\"Failed to fetch students:\", response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching students:\", error);\n    }\n  };\n\n\n\n\n\n  const fetchAndParseICS = async (student: Student) => {\n    if (!student || !student._id) {\n      console.error(\"Student or student ID is missing.\");\n      return;\n    }\n    try {\n      const proxyURL = `${BASE_API_URL}/api/calendar/${student._id}`;\n      const response = await fetch(proxyURL);\n      if (response.ok) {\n        const data = await response.text();\n        const jcalData = ICAL.parse(data);\n        const comp = new ICAL.Component(jcalData);\n        const vevents = comp.getAllSubcomponents(\"vevent\");\n        const parsedEvents = vevents.map((vevent: any) => new ICAL.Event(vevent));\n        const assignmentsList = parsedEvents.map((event: any) =>\n        new Assignment(event.uid, event.summary, event.description, event.startDate.toJSDate())\n        );\n        setAssignments(assignmentsList);\n      } else {\n        console.error(\"Failed to fetch ICS:\", response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching and parsing ICS:\", error);\n    }\n  };\n\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n    if (!isSignedIn()) {\n      navigate(\"/onboarding\");\n    }\n    if (storedStudentId) {\n      fetchStudentDataById(storedStudentId);\n    } else {\n      fetchStudentData();\n    }\n  }, []);\n\n\n\n  useEffect(() => {\n    setName(currentStudent?.name || \"\");\n    setCalendarLink(currentStudent?.calendarLink || \"\");\n    setEmail(currentStudent?.email || \"\");\n    setBedtime(currentStudent?.bedtime || \"\");\n  }, [currentStudent]);\n\n  useEffect(() => {\n    if (currentStudent && currentStudent._id) {\n      localStorage.setItem('studentId', currentStudent._id);\n    }\n  }, [currentStudent]);\n\n  const fetchStudentDataById = async (_id: string) => {\n    if (!_id) {\n      console.error(\"Student ID is not provided.\");\n      return;\n    }\n    try {\n      const response = await fetch(`${BASE_API_URL}/students/${_id}`);\n      if (response.ok) {\n        const studentData = await response.json();\n        if (studentData) {\n          const student = new Student(studentData._id, studentData.name, studentData.email, studentData.calendarLink, studentData.originalCalendarLink, studentData.bedtime, studentData.emojis);\n          setCurrentStudent(student);\n          setBedtime(student.bedtime);\n          setOriginalCalendarLink(student.originalCalendarLink);\n          fetchAndParseICS(student); // directly pass the student object to fetch and parse its calendar data\n        } else {\n          console.error(\"Student with ID not found:\", _id);\n          fetchStudentData(); // If specific student not found, fetch all students and default to the first\n        }\n      } else {\n        console.error(\"Error fetching student by ID:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error fetching student by ID:\", error);\n    }\n  };\n\n  async function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n\n\n    const obj = {\n      name: name,\n      originalCalendarLink: originalCalendarLink,\n      calendarLink: calendarLink,\n      email: email,\n      bedtime: bedtime\n    };\n\n    console.log(\"Form Data:\", obj);\n    console.log(obj.bedtime, typeof obj.bedtime);\n\n    if (!currentStudent || !currentStudent._id) {\n      console.error(\"Current student or student ID is missing.\");\n      return;\n    }\n\n\n    try {\n      const response = await fetch(`${BASE_API_URL}/students/${currentStudent._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(obj)\n      });\n\n      if (response.ok) {\n        console.log(\"Student data updated successfully.\");\n        setCurrentStudent((prevState) => ({ ...prevState!, ...obj }));\n        setBedtime(obj.bedtime);\n\n        setStudents((prevStudents) => {\n          const updatedStudents = [...prevStudents];\n          const studentIndex = updatedStudents.findIndex((stud) => stud._id === currentStudent._id);\n          if (studentIndex !== -1) {\n            updatedStudents[studentIndex] = { ...updatedStudents[studentIndex], ...obj };\n          }\n          return updatedStudents;\n        });\n\n        setShowSettings(false);\n\n      } else {\n        console.error(\"Error updating student data:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error sending data to server:\", error);\n    }\n  }\n  function handleOriginalCalendarLinkChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setOriginalCalendarLink(e.target.value);\n  }\n\n  async function handleClick(emote: number) {\n    if (!currentStudent || !currentStudent._id) {\n      console.error(\"Current student or student ID is missing.\");\n      return;\n    }\n\n    document.body.style.overflow = \"auto\";\n    setShowEmotes(false);\n    switch (emote) {\n      case 1:{\n          setResponse(\"That's good to hear!\");\n          break;\n        }\n      case 2:{\n          setResponse(\"Hope you feel better!\");\n          break;\n        }\n      case 3:{\n          setResponse(\"Hope you feel better!\");\n          break;\n        }\n      case 4:{\n          setResponse(\"Hope you feel better!\");\n          break;\n        }\n      default:{\n          setResponse(\"Emote not recognized.\");\n          break;\n        }\n    }\n    // Store the emote with the current timestamp\n    const emojiEvent = { emoji: emote, timestamp: new Date() };\n    try {\n      const studentId = currentStudent?._id;\n\n      if (!studentId) {\n        console.error(\"Student ID is not available.\");\n        return;\n      }\n\n      const response = await fetch(`${BASE_API_URL}/students/${studentId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ emojiEvent })\n      });\n\n      if (!response.ok) {\n        console.error(\"Error updating emote:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error sending emote to server:\", error);\n    }\n  }\n\n  function scrollDown() {\n    var startY = 0;\n    var stopY = bottomRef.current!.offsetTop;\n    var distance = stopY > startY ? stopY - startY : startY - stopY;\n    if (distance < 100) {\n      scrollTo(0, stopY);return;\n    }\n    var speed = Math.round(distance / 100);\n    if (speed >= 20) speed = 20;\n    var step = Math.round(distance / 25);\n    var leapY = stopY > startY ? startY + step : startY - step;\n    var timer = 0;\n    if (stopY > startY) {\n      for (var i = startY; i < stopY; i += step) {\n        setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n        leapY += step;if (leapY > stopY) leapY = stopY;timer++;\n      }return;\n    }\n    for (var i = startY; i > stopY; i -= step) {\n      setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n      leapY -= step;if (leapY < stopY) leapY = stopY;timer++;\n    }\n    return false;\n  }\n\n  function scrollUp() {\n    var stopY = 0;\n    var startY = bottomRef.current!.offsetTop;\n    var distance = stopY > startY ? stopY - startY : startY - stopY;\n    if (distance < 100) {\n      scrollTo(0, stopY);return;\n    }\n    var speed = Math.round(distance / 100);\n    if (speed >= 20) speed = 20;\n    var step = Math.round(distance / 25);\n    var leapY = stopY > startY ? startY + step : startY - step;\n    var timer = 0;\n    if (stopY > startY) {\n      for (var i = startY; i < stopY; i += step) {\n        setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n        leapY += step;if (leapY > stopY) leapY = stopY;timer++;\n      }return;\n    }\n    for (var i = startY; i > stopY; i -= step) {\n      setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n      leapY -= step;if (leapY < stopY) leapY = stopY;timer++;\n    }\n    return false;\n  }\n\n  return (\n    <div className=\"scroll-smooth\">\n            <div className=\"h-[100vh]\">\n                <div className=\"flex flex-col space-y-10 justify-center h-full\">\n                    <div className=\"flex flex-row place-self-center\">\n                        <img src=\"icons/Carrot_GreenHalo.svg\" className=\"place-self-center bg-contain w-96 h-96\"></img>\n                        <Countdown assignments={assignments} bedtime={bedtime} />\n                    </div>\n                    <p className=\"text-white font-bold text-5xl place-self-center\">{`Hey ${currentStudent?.name || 'there'}, it's ${getCurrentDay()}.`}</p>\n                    {showEmotes ?\n          <>\n                            <div className=\"flex flex-col place-self-center space-y-2\">\n                                <p className=\"text-white font-medium text-3xl place-self-center\">How are you feeling today?</p>\n                                <div className=\"flex flex-row place-self-center space-x-2\">\n                                    <button className=\"text-5xl\" onClick={() => handleClick(1)}>\uD83D\uDE03</button>\n                                    <button className=\"text-5xl\" onClick={() => handleClick(2)}>\uD83D\uDCA9</button>\n                                    <button className=\"text-5xl\" onClick={() => handleClick(3)}>\uD83D\uDE14</button>\n                                    <button className=\"text-5xl\" onClick={() => handleClick(4)}>\uD83D\uDE21</button>\n                                </div>\n                            </div>\n                        </> :\n          <>\n                            <div className=\"flex flex-col place-self-center space-y-2\">\n                                <p className=\"text-white font-medium text-3xl place-self-center\">{response}</p>\n                                <p className=\"text-white font-medium text-3xl place-self-center\">Your halo is red because you have 5 assignments coming up:</p>\n                            </div>\n                            <img src=\"icons/down-arrow.svg\" className=\"place-self-center bg-contain absolute bottom-5 animate-bounce cursor-pointer\" onClick={() => scrollDown()}></img>\n                        </>}\n\n                </div>\n                <button className=\"fixed bottom-4 left-4\">\n                    <img src=\"icons/settings.svg\" onClick={() => setShowSettings(true)}></img>\n                </button>\n                {showSettings ?\n        <>\n                        <div\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n\n                            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n                                {/*content*/}\n                                <div className=\"bg-gradient-to-tr from-fitalyst-green to-fitalyst-orange border-2 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n                                    {/*header*/}\n                                    <div className=\"flex items-start justify-between pl-5 pr-5 pt-5 border-solid border-white rounded-t\">\n                                        <p className=\"text-3xl text-white font-bold\">\n                                            Settings\n                                        </p>\n                                    </div>\n                                    {/*body*/}\n                                    <form method=\"post\" encType=\"multipart/form-data\" action=\"# \" onSubmit={handleSubmit} className=\"relative p-6 grid grid-cols-2 grid-flow-row justify-evenly gap-4\">\n                                        <div className=\"flex flex-col space-y-2\">\n                                            <p className=\"text-fitalyst-orange font-bold text-2xl\">Name</p>\n                                            <input type=\"text\" name=\"name\" className=\"bg-fitalyst-light-blue border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" defaultValue={currentStudent?.name} required></input>\n                                        </div>\n                                        <div className=\"flex flex-col space-y-2\">\n                                            <p className=\"text-fitalyst-green font-bold text-2xl\">Bedtime</p>\n                                            <input type=\"time\" name=\"bedtime\" onChange={(e) => setBedtime(e.target.value)} value={bedtime} className=\"bg-fitalyst-light-blue border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" required></input>\n                                        </div>\n                                        <div className=\"flex flex-col space-y-2\">\n                                            <p className=\"text-fitalyst-orange font-bold text-2xl\">Calendar Link</p>\n                                            <input type=\"text\" name=\"originalCalendarLink\" className=\"bg-fitalyst-light-blue border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" value={originalCalendarLink} onChange={handleOriginalCalendarLinkChange} required></input>\n                                        </div>\n\n\n                                        <div className=\"flex flex-col space-y-2\">\n                                            <p className=\"text-fitalyst-green font-bold text-2xl\">Email</p>\n                                            <input type=\"email\" name=\"email\" className=\"bg-fitalyst-light-blue border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" defaultValue={currentStudent?.email} required></input>\n                                        </div>\n                                        {/* <div className=\"flex flex-col space-y-2\">\n                       <p className=\"text-fitalyst-orange font-bold text-2xl\">Graduation</p>\n                       <input type=\"number\" className=\"bg-fitalyst-light-blue border border-gray-300 text-black text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" defaultValue=\"2025\" required></input>\n                    </div> */}\n                                        <div className=\"flex items-center justify-end p-6 rounded-b\">\n                                            <button\n                      className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                      type=\"button\"\n                      onClick={() => setShowSettings(false)}>\n\n                                                Cancel\n                                            </button>\n                                            <button\n                      className=\"bg-emerald-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                      type=\"submit\"\n                      onClick={() => setShowSettings(false)}>\n\n                                                Save Changes\n                                            </button>\n                                        </div>\n\n                                        {currentStudent?.name == null && <button\n                    className=\"bg-blue-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                    type=\"submit\"\n                    onClick={() => navigate(\"/onboarding\")}>\n\n                                               Onboard\n                                            </button>}\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n                    </> :\n        null}\n            </div>\n            <div className=\"flex flex-col w-full h-[100vh]\" ref={bottomRef}>\n                <img src=\"icons/up-arrow.svg\" className=\"bg-contain place-self-center animate-bounce cursor-pointer p-8\" onClick={() => scrollUp()}></img>\n                <div className=\"flex flex-col justify-center gap-0\">\n                {assignments.sort((a, b) => a.date.toLocaleString() < b.date.toLocaleString() ? -1 : 1).slice(0, 5).map((assignment) =>\n          <AssignmentTile key={assignment._id} {...assignment} />\n          )}\n                </div>\n            </div>\n        </div>);\n\n\n}\n\ninterface CountdownProps {\n  assignments: Array<Assignment>;\n  bedtime: string;\n}\n\nexport function Countdown(props: CountdownProps) {\n  const [date, setDate] = useState(new Date());\n\n\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  var countDownDate = new Date(date);\n  //const [bedHour, bedMinute] = props.bedtime.split(\":\").map(num => parseInt(num));\n  const [bedHour, bedMinute] = (typeof props.bedtime === \"string\" ? props.bedtime.split(\":\") : [\"00\", \"00\"]).map((num) => parseInt(num));\n\n  var countDownTime = countDownDate.setHours(bedHour, bedMinute, 0, 0);\n\n  var now = date.getTime();\n  var distance = countDownTime - now;\n\n  if (props.assignments.length > 0 && distance > 3 * 60 * 60 * 1000 && Math.abs(props.assignments[0].date.getTime() - now) < 8 * 60 * 60 * 1000) {\n    var firstAssignment = props.assignments[0].date;\n    distance = firstAssignment.getTime() - now;\n  }\n\n  if (distance < -4 * 60 * 60 * 1000) distance += 24 * 60 * 60 * 1000;\n  if (distance < 0) {\n    var text = 'past';\n    distance *= -1;\n  } else {\n    var text = \"'til\";\n  }\n\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24)) < 10 ?\n  '0' + Math.floor(distance / (1000 * 60 * 60 * 24)) : Math.floor(distance / (1000 * 60 * 60 * 24));\n  var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)) < 10 ?\n  '0' + Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)) : Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60)) < 10 ?\n  '0' + Math.floor(distance % (1000 * 60 * 60) / (1000 * 60)) : Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n  var seconds = Math.floor(distance % (1000 * 60) / 1000) < 10 ?\n  '0' + Math.floor(distance % (1000 * 60) / 1000) : Math.floor(distance % (1000 * 60) / 1000);\n\n  return (\n    <div className=\"flex flex-col place-self-center place-items-end\">\n            {days == 0 && <div className=\"grid grid-cols-3\">\n                <div className=\"flex flex-row px-2 place-items-end\">\n                    <p className=\"text-white font-bold text-9xl tabular-nums\">{hours}</p>\n                    <p className=\"text-white font-light text-6xl\">h</p>\n                </div>\n                <div className=\"flex flex-row px-2 place-items-end\">\n                    <p className=\"text-white font-bold text-9xl tabular-nums\">{minutes}</p>\n                    <p className=\"text-white font-light text-6xl\">m</p>\n                </div>\n                <div className=\"flex flex-row px-2 place-items-end\">\n                    <p className=\"text-white font-bold text-9xl tabular-nums\">{seconds}</p>\n                    <p className=\"text-white font-light text-6xl\">s</p>\n                </div>\n            </div>}\n            {days != 0 && <div className=\"grid grid-cols-4\">\n                <div className=\"flex flex-row px-2 place-items-end\">\n                    <p className=\"text-white font-bold text-9xl tabular-nums\">{days}</p>\n                    <p className=\"text-white font-light text-6xl\">d</p>\n                </div>\n                <div className=\"flex flex-row px-2 place-items-end\">\n                    <p className=\"text-white font-bold text-9xl tabular-nums\">{hours}</p>\n                    <p className=\"text-white font-light text-6xl\">h</p>\n                </div>\n                <div className=\"flex flex-row px-2 place-items-end\">\n                    <p className=\"text-white font-bold text-9xl tabular-nums\">{minutes}</p>\n                    <p className=\"text-white font-light text-6xl\">m</p>\n                </div>\n                <div className=\"flex flex-row px-2 place-items-end\">\n                    <p className=\"text-white font-bold text-9xl tabular-nums\">{seconds}</p>\n                    <p className=\"text-white font-light text-6xl\">s</p>\n                </div>\n            </div>}\n            <p className=\"text-white font-bold text-5xl underline\">{text} \uD83D\uDE34</p>\n        </div>);\n\n}\n\nexport function AssignmentTile(props: Assignment) {\n\n  var distance = props.date.getTime() - new Date().getTime();\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24)) < 10 ?\n  '0' + Math.floor(distance / (1000 * 60 * 60 * 24)) : Math.floor(distance / (1000 * 60 * 60 * 24));\n  var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)) < 10 ?\n  '0' + Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)) : Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n\n  return (\n    <div className=\"flex flex-row w-full p-2 overflow-hidden\">\n            <div className=\"flex-none w-1/6 h-40 border-4 rounded-l-xl text-white font-medium text-xl text-center flex items-center justify-center overflow-hidden\">\n                {props.name}\n            </div>\n            <div className=\"grow h-40 border-t-4 border-b-4 text-white font-medium text-2xl underline text-center flex items-center justify-center overflow-hidden\">\n                {props.description}\n            </div>\n            <div className=\"flex-none w-1/6 h-40 border-4 rounded-r-2xl text-white font-medium text-2xl text-center flex items-center justify-center overflow-hidden\">\n                {days}d {hours}h\n            </div>\n        </div>);\n\n}\n\nfunction getEmojiFromNumber(emote: number): string {\n  const emojiMap = {\n    1: \"\uD83D\uDE03\",\n    2: \"\uD83D\uDCA9\",\n    3: \"\uD83D\uDE14\",\n    4: \"\uD83D\uDE21\"\n  };\n  return emojiMap[emote] || \"\"; // returns the corresponding emoji or an empty string if not found\n}\n\nfunction getCurrentDay(): string {\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  return days[new Date().getDay()];\n}\n\nfunction formatDueDate(date: Date): string {\n  const now = new Date();\n  const diffTime = Math.abs(date.getTime() - now.getTime());\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  const diffHours = Math.floor(diffTime / (1000 * 60 * 60) % 24);\n  return `Due in ${diffDays} days and ${diffHours} hours`;\n}\n\nfunction extractAndFormatLinks(description: string): JSX.Element {\n  const linkRegex = /\\[(.*?)\\]\\((.*?)\\)/g;\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = linkRegex.exec(description)) !== null) {\n    parts.push(description.slice(lastIndex, match.index));\n    parts.push(<a href={match[2]} target=\"_blank\" rel=\"noopener noreferrer\">{match[1] || 'Link'}</a>);\n    lastIndex = linkRegex.lastIndex;\n  }\n  parts.push(description.slice(lastIndex));\n\n  return <>{parts}</>;\n}", "export default {'entry':{'module':'/build/entry.client-6MFR6VSF.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-3F7PUAND.js','/build/_shared/chunk-3XJOQGLE.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BCJ43RGM.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-LKJM554U.js','imports':['/build/_shared/chunk-ONYGZ6UJ.js'],'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-AYE6VSHX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false},'routes/onboarding':{'id':'routes/onboarding','parentId':'root','path':'onboarding','index':undefined,'caseSensitive':undefined,'module':'/build/routes/onboarding-IVDSSE4N.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasErrorBoundary':false}},'version':'25a4017e','hmr':{'runtime':'/build/_shared/chunk-BCJ43RGM.js','timestamp':1696486934786},'url':'/build/manifest-25A4017E.js'};", "\nimport * as entryServer from \"/Users/ethanyu/VSCodeProjects/dash copy/node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/onboarding.tsx\";\nimport * as route2 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/onboarding\": {\n      id: \"routes/onboarding\",\n      parentId: \"root\",\n      path: \"onboarding\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "links", "jsxDEV", "links", "input", "links", "useState", "useEffect", "useNavigate", "jsxDEV", "links", "Student", "useNavigate", "useState", "response", "storedStudentId", "useEffect"]
}
