{
  "version": 3,
  "sources": ["../../../app/routes/onboarding.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/onboarding.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/onboarding.tsx\");\n}\n// REMIX HMR END\n\nimport { useNavigate } from 'react-router-dom';\nimport stylesheet from \"~/tailwind.css\";\nimport { useState } from \"react\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: stylesheet\n}];\nclass Student {\n  constructor(_id, name, email, calendarLink, originalCalendarLink, bedtime, emojis = []) {\n    this._id = _id;\n    this.name = name;\n    this.email = email;\n    this.calendarLink = calendarLink;\n    this.originalCalendarLink = originalCalendarLink;\n    this.bedtime = bedtime;\n    this.emojis = emojis;\n  }\n}\nexport default function Onboarding() {\n  _s();\n  const navigate = useNavigate();\n  const [student, setStudent] = useState(new Student(\"\", \"\"));\n  const [page, setPage] = useState(0);\n  const [question, setQuestion] = useState(\"What is your name?\");\n  const [input, setInput] = useState(\"\");\n  const [type, setType] = useState(\"text\");\n  const [calendarLink, setCalendarLink] = useState(\"\");\n  const [bedtime, setBedtime] = useState(\"23:00\"); // e.g., 11 PM\n  const [emojis, setEmojis] = useState([]);\n  async function createStudent(bedtimeValue) {\n    try {\n      const response = await fetch(`https://ec2-3-144-236-30.us-east-2.compute.amazonaws.com:3002/students`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: student.name,\n          email: student.email,\n          calendarLink: calendarLink,\n          bedtime: bedtimeValue,\n          emojis: emojis\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to create student: ${response.statusText}`);\n      }\n      const createdStudent = await response.json();\n\n      // Store the student's ID in localStorage\n      localStorage.setItem('studentId', createdStudent._id);\n      navigate(\"/\");\n    } catch (error) {\n      console.error(\"Error creating student:\", error);\n      alert(\"Failed to onboard. Please try again.\");\n    }\n  }\n  function onClick(input) {\n    switch (page) {\n      case 0:\n        if (input === \"\") {\n          alert(\"Please enter your name.\");\n          return;\n        }\n        setStudent(prev => ({\n          ...prev,\n          name: input\n        }));\n        setQuestion(\"What is your email?\");\n        break;\n      case 1:\n        if (input === \"\") {\n          alert(\"Please enter your email.\");\n          return;\n        }\n        setStudent(prev => ({\n          ...prev,\n          email: input\n        }));\n        setQuestion(\"Please provide your Canvas Calendar link.\");\n        break;\n      case 2:\n        setCalendarLink(input);\n        setQuestion(\"When is your bedtime?\");\n        setType(\"time\");\n        break;\n      case 3:\n        if (input === \"\") {\n          alert(\"Please enter your bedtime.\");\n          return;\n        } else {\n          setBedtime(input);\n          createStudent(input); // Directly call the createStudent function here.\n        }\n\n        break;\n    }\n    setPage(page + 1);\n  }\n  return <div className=\"h-screen\">\n            <div className=\"flex flex-col space-y-10 justify-center h-full\">\n                <p className=\"text-white font-bold text-5xl place-self-center\"> {question} </p>\n                <input className=\"h-20 text-black font-bold text-5xl place-self-center\" type={type} value={input} onChange={event => setInput(event.target.value)} onKeyUp={event => {\n        if (event.key === 'Enter') {\n          onClick(input);\n          setInput(\"\");\n        }\n      }}>\n        </input>\n                <div className=\"place-self-center\">\n                    {page !== 0 && <button className=\"text-white background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" onClick={() => {\n          switch (page) {\n            case 1:\n              setQuestion(\"What is your name?\");\n              setInput(\"\");\n              break;\n            case 2:\n              setQuestion(\"What is your email?\");\n              setInput(student.name);\n              setType(\"text\");\n              break;\n            case 3:\n              setInput(student.email);\n              break;\n            default:\n              break;\n          }\n          setPage(page - 1);\n        }}>\n             Back </button>}\n                    <button className=\"text-white background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\" onClick={() => {\n          onClick(input);\n          setInput(\"\");\n        }}>\n             Next </button>\n                </div>\n            </div>\n        </div>;\n}\n_s(Onboarding, \"3u/na6CvOebqJskoXjYtQfffAus=\", false, function () {\n  return [useNavigate];\n});\n_c = Onboarding;\nvar _c;\n$RefreshReg$(_c, \"Onboarding\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["input"]
}
